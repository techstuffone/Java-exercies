import java.util.*;

public class Main{
    public static void main(String[] args) {
        Scanner myObj = new Scanner(System.in);

        System.out.println("Tell me how big grid would you like to make");
        int n = myObj.nextInt();
        buildGrid(n);
    }

    public static void buildGrid(int n){
        String[][] grid = new String[n][n];
        int rand = 0;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                rand = (int)(Math.floor(Math.random()*98)+2);
                rand = isPrime(rand);
                grid[i][j] = Integer.toString(rand);

                }
            }
        isPalindrome(n, grid);
        for(int j = 0; j < n; j++) {
            for (int i = 0; i < n; i++) {
                System.out.print(grid[j][i] + " ");
            }
            System.out.println();
        }
        }

    public static int isPrime(int rand) {
        boolean prime = false;
        while (!prime) {
            rand++;
            prime = true;

            for (int j = 2; j <= Math.sqrt(rand); j++) {
                if (rand % j == 0) {
                    prime = false;
                    break;
                }
            }
        }
        System.out.println(rand);
        return rand;
    }
    public static void isPalindrome(int n, String[][] grid){
        boolean palindrome = false;
        for(int i=0; i<n; i++){
            for (int j = 0; j < n; j++) {
                try {
                    int value = Integer.parseInt(grid[j][i]);
                    if ((value < 10)|| (grid[j][i].charAt(0) == grid[j][i].charAt(grid[j][i].length() - 1))) {
                        grid[j][i] += "-@";
                    } else if (value % 7 == 0) {
                        grid[j][i] += "-#";
                    } else if (value % 3 == 0 && value % 9 != 0) {
                        grid[j][i] += "-&";
                    } else {
                        grid[j][i] += "-*";
                    }
                }catch(NumberFormatException e){
                    System.out.print("Somehow found problem, ");
                }
            }
        }
    }

}

